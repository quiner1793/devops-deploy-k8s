apiVersion: v1
kind: Service
metadata:
  # The name of the Service resource.
  name: python-service
  # Additional metadata (like labels) can help in categorizing and selecting resources.
  labels:
    # Example label; useful for filtering and grouping in larger clusters.
    environment: development
spec:
  # The type field determines how the service is exposed.
  # Options include:
  #   • ClusterIP (default) – exposes the service on a cluster-internal IP.
  #   • NodePort – exposes the service on each Node’s IP at a static port.
  #   • LoadBalancer – provisions an external load balancer (if supported by the cloud provider).
  type: LoadBalancer
  # The selector field specifies how the Service finds the backend pods.
  # Each pod with the matching label (app: python-app-unique) will be part of this service.
  selector:
    app: python-app-unique
  # The ports field lists the ports that this service will expose.
  ports:
    - name: http
      # 'port' is the port number on which the service is exposed outside.
      port: 8080
      # 'targetPort' is the port number on the container/pod that receives the traffic.
      targetPort: 8080
      # 'protocol' specifies the protocol used (TCP is default).
      protocol: TCP
